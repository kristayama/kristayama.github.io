group_by(HVI) %>%
mutate(value = na.approx(value, na.rm = FALSE))
view(hvi_tidy)
```
hvi_tidy <- hvi_tidy %>%
group_by(HVI) %>%
mutate(Date = na.approx(Date, na.rm = FALSE))
hvi_tidy <- hvi_tidy %>%
group_by(HVI) %>%
mutate(Date = na.approx(Date, na.rm = FALSE))
hvi_tidy <- hvi_tidy %>%
group_by(HVI) %>%
mutate(Date = na.approx(Date, na.rm = FALSE)) %>%
view()
knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('ggplot2') # the major package for visualization in R
hvi <- read_csv("zillow_hvi_msa.csv")
hvi <- read_csv("zillow_hvi_msa.csv",
col_types = cols(
RegionName = col_character(),
StateName  = col_character(),
Region   = col_character(), # Census Bureau Regions
RegionID   = col_double(),
Popu2024   = col_number(),
.default   = col_double()   # for other columns
)
)
head(hvi, 3)
head(hvi, 3)
hvi_tidy <- hvi %>%
pivot_longer( # using `pivot_longer` to reshape wide → long
cols = -c("RegionID", "RegionName", "Popu2024", "StateName", "Region"), # keep these 4 as identifier variables (don’t pivot them)
names_to = "Date",  # old column names (like "1/31/00") become a new column called Date
values_to = "HVI" # the cell values go into a new column called HVI
# values_drop_na = TRUE; default as FALSE; if TRUE, will remove rows with missing HVI.
) %>%
mutate(
Date = as.Date(Date, format = "%m/%d/%y")
)
head(hvi_tidy,3)
hvi_wide <- hvi_tidy %>%
pivot_wider(
names_from = Date,   # expand `Date` to multiple rows
values_from = HVI    # extract`HVI` column to those new columns
)
head(hvi_wide, 3)
colSums(is.na(hvi_tidy))
# remove NA then we can see there are 9237 rows afterwards, 3 missing values are removed
hvi_tidy_NA_remove <- hvi_tidy %>%
filter(!is.na(HVI))
dim(hvi_tidy_NA_remove)
# TODO
library(zoo)
view(hvi_tidy)
hvi_tidy <- hvi_tidy %>%
group_by(Date) %>%
mutate(HVI = na.approx(HVI, na.rm = FALSE)) %>%
view()
hvi_tidy
# install.packages("skimr") # you only need to install once
library(skimr)
skim(hvi_tidy) # run `skim()` to get a quick overview of the dataset
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
ggplot(hvi_pnw, aes(x = Date, y = HVI, group = RegionName)) # will show below the chunk
g <- ggplot(hvi_pnw, aes(x = Date, y = HVI, color = RegionName)) # will not show the plots
g <- g + geom_line(aes(color = RegionName),
alpha = 0.8, # Opacity: 0 means fully transparent (invisible)
linetype = 6, # 6 = twodash, you can check more option using `?linetype`
linewidth = 0.8) # linewidth
g
g <- g + scale_y_continuous(labels = scales::comma, # format numbers with commas
trans = "log10") # apply base-10 log transformation
g
g <- g + coord_cartesian(xlim = c(as.Date("2010-01-01"), as.Date("2020-6-30")),
ylim = c(NA, 600000)) # we did not define the low bound of y
g
g <- g + facet_wrap(~ RegionName)
g
g <- g +
labs(
x = "Year",                # label for x axis
y = "Home Value Index",    # label for y axis
title = "Seattle and Portland Housing Trend 2010–2020", # main title
subtitle = "Data source: Zillow HVI",      # subtitle
caption = "Visualization using R and ggplot2"     # caption
)
g
g <- g + theme_light(base_size = 12) + # use a minimal theme and the base size as 12
theme(panel.grid.minor = element_blank(), # remove minor grids
legend.position = "none"
)
g
ggsave(
filename = "Seattle and Portland HVI Trend.png",
plot = g,
width = 12,
height = 6,
dpi = 300
) # save the last plot as 12 * 5 inch png file with 300 dpi (dots per inch)
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_histogram(
bins = 10,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
# TODO
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_dotplot(
bins = 10,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
# TODO
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_dotplot(
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
# TODO
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_dotplot(
binwidth = 10,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
# TODO
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_dotplot(
binwidth = 1,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
# TODO
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_dotplot(
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(y = Popu2024, x = Region)
) +
geom_boxplot(
fill = "black",
alpha = 0.3,       # transparency
width = 0.5        # box width
) +
labs(
title = "Boxplot of City Population by Census Bureau Regions",
y = "Population (2024)",
x = NULL
) +
theme_minimal()
# TODO
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(y = Popu2024, x = Region)
) +
geom_boxplot(
fill = "black",
alpha = 0.3,       # transparency
width = 0.5        # box width
) +
labs(
title = "Boxplot of City Population by Census Bureau Regions",
y = "Population (2024)",
x = NULL
) +
geom_jitter(
width = 0.5,
height = 5
)
theme_minimal()
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(y = Popu2024, x = Region)
) +
geom_boxplot(
fill = "black",
alpha = 0.3,       # transparency
width = 0.5        # box width
) +
labs(
title = "Boxplot of City Population by Census Bureau Regions",
y = "Population (2024)",
x = NULL
) +
geom_jitter(
width = 0.2,
height = 0,
alpha = 0/5
)
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(y = Popu2024, x = Region)
) +
geom_boxplot(
fill = "black",
alpha = 0.3,       # transparency
width = 0.5        # box width
) +
labs(
title = "Boxplot of City Population by Census Bureau Regions",
y = "Population (2024)",
x = NULL
) +
geom_jitter(
width = 0.2,
height = 0,
alpha = 0.5
)
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(y = Popu2024, x = Region)
) +
geom_boxplot(
fill = "black",
alpha = 0.3,       # transparency
width = 0.5        # box width
) +
labs(
title = "Boxplot of City Population by Census Bureau Regions",
y = "Population (2024)",
x = NULL
) +
geom_jitter(
width = 0.2,
height = 0,
)
ggplot(data = hvi_tidy_NA_remove %>%
filter(
RegionName %in% c("Seattle, WA", "New York, NY", "San Francisco, CA")
)) +
stat_ecdf(# stat builds new variables to plot, we build CDF
aes(x = HVI, color = RegionName),) + # we use color to distinguish regions
labs(title = "CDF HVI for Seattle, New York and SF",
subtitle = "F(x) = P(X ≤ x)",
y = "Cumulative Distribution Function (CDF)",
x = "Home Value Index") +
theme_minimal() +
theme(legend.position = "bottom") # because we have `color`, ggplot will generate legend
ggplot(
data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(x = Popu2024, y = HVI)
) +
geom_point(alpha = 0.6) +
geom_smooth( # we use a sample linear regression to model the relationship (trends)
method = "lm",
formula = y ~ x,
se = TRUE, # show confidence interval
color = "#4B2E83"
) +
labs(
title = "Scatterplots of City Population and Home Value Index",
x = "Population (2024)",
y = "Home Value Index"
) +
theme_minimal()
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31"))) +
geom_point(aes(x = StateName, y = HVI, size = Popu2024 ), alpha = 0.6) + # bubble size = population
scale_y_continuous(labels = scales::comma) +
scale_size_continuous(range = c(1, 10), labels = scales::comma) +
labs(
title = "Bubble Chart of Population and Home Value Index by State",
x = "State",
y = "Home Value Index",
size = "Population (2024)"
) +
theme_minimal() +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1) # rotate state labels
)
ggplot(
data = hvi_tidy_NA_remove
) +
geom_tile(aes(x = Date, y = RegionName, fill = HVI)) +
scale_fill_viridis_c(option = "magma", direction = -1) +
labs(
title = "Home Value Index Over Time by City",
x = "Year",
y = "City"
) +
scale_x_date(date_breaks = "5 year", date_labels = "%Y") +
theme_minimal() +
theme(panel.grid = element_blank())
# TODO
data <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
skim(data)
View(data)
wa_data <- data %>%
filter(GEOID == "WA")
View(wa_data)
other_data <- data %>%
filter(!GEOID == "WA")
View(other_data)
wa_data <- data %>%
filter(GEOID == "WA") %>%
summary()
wa_data
# TODO
data <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
skim(data)
data %>%
filter(GEOID == "WA") %>%
summary()
data %>%
filter(!GEOID == "WA") %>%
summary()
# TODO pt 1
data <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
skim(data)
data %>%
filter(GEOID == "WA") %>%
summary()
data %>%
filter(!GEOID == "WA") %>%
summary()
View(data)
colnames(data)
# TODO pt 2, converting to wide format
data_wide <- data %>%
pivot_wider(
id_cols = c(GEOID, GEONAME, YEAR, QUARTER),  # keep these as row identifiers
names_from = c("SOURCE"),                    # optional if you want separate columns by SOURCE
values_from = c("VALUE1", "VALUE2")         # these are the values to spread
)
# TODO pt 2, converting to wide format
data_wide <- data %>%
pivot_wider(
id_cols = c(GEOID, GEONAME, YEAR, QUARTER),
values_from = c(VALUE1, VALUE2),
values_fn = list   # keeps duplicates as lists
)
# TODO pt 2, converting to wide format
data_wide <- data %>%
pivot_wider(
id_cols = c(GEOID, GEONAME, YEAR, QUARTER),
values_from = c(VALUE1, VALUE2),
values_fn = list   # keeps duplicates as lists
)
# TODO pt 1
data <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
skim(data)
data %>%
filter(GEOID == "WA") %>%
summary()
data %>%
filter(!GEOID == "WA") %>%
summary()
# TODO pt 2, converting to wide format
data_wide <- data %>%
pivot_wider(
id_cols = c(GEOID, GEONAME, YEAR, QUARTER),
values_from = c(VALUE1, VALUE2),
values_fn = list   # keeps duplicates as lists
)
# TODO pt 2, converting to wide format
data_wide <- data %>%
pivot_wider(
id_cols = c(GEOID, GEONAME, YEAR, QUARTER),
values_from = c(VALUE1, VALUE2),
values_fn = list   # keeps duplicates as lists
)
# TODO pt 2, converting to wide format
data %>%
head(5)
# TODO pt 2, converting to wide format
data %>%
head(5) %>%
view()
data_summary <- data %>%
group_by(GEOID, GEONAME, YEAR, QUARTER) %>%
summarise(
VALUE1 = mean(VALUE1, na.rm = TRUE),
VALUE2 = mean(VALUE2, na.rm = TRUE),
.groups = "drop"
)
View(data_summary)
# TODO pt 3, diagrams
ggplot(data_summary, aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_boxplot(fill = "white", alpha = 0.5) +
labs(title = "Distribution of Active Mortgages by State",
x = "State", y = "VALUE1 (Mortgage Count)") +
theme_minimal()
ggplot(data_summary, aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_boxplot(fill = "white", alpha = 0.5) +
labs(title = "Distribution of Active Mortgages by State",
x = "State", y = "VALUE1 (Mortgage Count)") +
theme_minimal()  +
coord_flip()
ggplot(data_summary, aes(x = VALUE1)) +
geom_histogram(binwidth = 10, fill = "skyblue", color = "black") +
labs(title = "Distribution of Mortgage Counts Across All States",
x = "VALUE1", y = "Frequency") +
theme_minimal()
ggplot(data_summary, aes(x = VALUE1)) +
geom_histogram(binwidth = 10, fill = "white", color = "black") +
labs(title = "Distribution of Mortgage Counts Across All States",
x = "VALUE1", y = "Frequency") +
theme_minimal()
ggplot(data_summary, aes(x = VALUE1, y = VALUE2)) +
geom_point(alpha = 0.5, color = "darkblue") +
labs(title = "Relationship Between Mortgage Count and Loan Balance",
x = "VALUE1 (Mortgage Count)", y = "VALUE2 (Loan Balance)") +
theme_minimal()
ggplot(data_summary, aes(x = VALUE1, y = VALUE2)) +
geom_point(alpha = 0.5, color = "red") +
labs(title = "Relationship Between Mortgage Count and Loan Balance",
x = "VALUE1 (Mortgage Count)", y = "VALUE2 (Loan Balance)") +
theme_minimal()
# TODO pt 3, diagrams
ggplot(data_summary, aes(x = VALUE1)) +
geom_histogram(binwidth = 10, fill = "white", color = "black") +
labs(title = "Distribution of Mortgage Counts Across All States",
x = "VALUE1", y = "Frequency") +
theme_minimal()
ggplot(data_summary, aes(x = VALUE1, y = VALUE2)) +
geom_point(alpha = 0.5, color = "red") +
labs(title = "Relationship Between Mortgage Count and Loan Balance",
x = "VALUE1 (Mortgage Count)", y = "VALUE2 (Loan Balance)") +
theme_minimal()
ggplot(data_summary, aes(x = YEAR + (QUARTER-1)/4, y = VALUE1, group = GEONAME, color = GEONAME)) +
geom_line(alpha = 0.3, size = 0.8) +
labs(title = "Quarterly Active Mortgages for All States",
x = "Year", y = "VALUE1 (Mortgage Count)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data_summary, aes(x = VALUE1)) +
geom_histogram(binwidth = 10) +
labs(title = "Distribution of Mortgage Counts Across All States",
x = "VALUE1", y = "Frequency") +
theme_minimal()
, fill = "white", color = "black"
ggplot(data_summary, aes(x = VALUE1, y = VALUE2)) +
geom_point(alpha = 0.5, color = "red") +
labs(title = "Relationship Between Mortgage Count and Loan Balance",
x = "VALUE1 (Mortgage Count)", y = "VALUE2 (Loan Balance)") +
theme_minimal()
ggplot(data_summary, aes(x = VALUE1)) +
geom_histogram(binwidth = 10, fill = "white", color = "black") +
labs(title = "Distribution of Mortgage Counts Across All States",
x = "VALUE1", y = "Frequency") +
theme_minimal()
#2024 Bar Chart
ggplot(data_summary %>% filter(YEAR == 2024), aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_col(fill = "blue") +
labs(title = "Mortgage Counts by State in 2024",
x = "State", y = "VALUE1 (Mortgage Count)") +
coord_flip() +
theme_minimal()
#2024 Bar Chart
ggplot(data_summary %>% filter(YEAR == 2024),
aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_col(fill = "skyblue") +
labs(title = "Mortgage Counts by State in 2024",
x = "State", y = "VALUE1 (Mortgage Count)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#2024 Bar Chart
ggplot(data_summary %>% filter(YEAR == 2024),
aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_col(fill = "skyblue", width = 0.7) +   # width < 1 adds space
labs(title = "Mortgage Counts by State in 2024",
x = "State", y = "VALUE1 (Mortgage Count)") +
coord_flip() +  # keeps bars horizontal for readability
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#2024 Bar Chart
ggplot(data_summary %>% filter(YEAR == 2024),
aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_col(fill = "skyblue", width = 0.7) +   # width < 1 adds space
labs(title = "Mortgage Counts by State in 2024",
x = "State", y = "VALUE1 (Mortgage Count)") +
coord_flip() +  # keeps bars horizontal for readability
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#2024 Bar Chart
ggplot(data_summary %>% filter(YEAR == 2024),
aes(x = reorder(GEONAME, VALUE1), y = VALUE1)) +
geom_col(fill = "skyblue") +
labs(title = "Mortgage Counts by State in 2024",
x = "State", y = "VALUE1 (Mortgage Count)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
